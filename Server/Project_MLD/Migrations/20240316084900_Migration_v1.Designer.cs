// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project_MLD.Models;

#nullable disable

namespace Project_MLD.Migrations
{
    [DbContext(typeof(MldDatabaseContext))]
    [Migration("20240316084900_Migration_v1")]
    partial class Migration_v1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Project_MLD.Models.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("account_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountId"));

                    b.Property<bool?>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("active");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateOnly?>("CreatedDate")
                        .HasColumnType("date")
                        .HasColumnName("created_date");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("password");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("username");

                    b.HasKey("AccountId");

                    b.ToTable("Account", (string)null);
                });

            modelBuilder.Entity("Project_MLD.Models.AccountRole", b =>
                {
                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("account_id");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateOnly?>("CreatedDate")
                        .HasColumnType("date")
                        .HasColumnName("created_date");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.HasIndex("AccountId");

                    b.HasIndex("RoleId");

                    b.ToTable("Account Role", (string)null);
                });

            modelBuilder.Entity("Project_MLD.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("Project_MLD.Models.Class", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("GradeId")
                        .HasColumnType("int")
                        .HasColumnName("grade_ id");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK_Lớp");

                    b.HasIndex("GradeId");

                    b.ToTable("Class", (string)null);
                });

            modelBuilder.Entity("Project_MLD.Models.CurriculumDistribution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK_Phân phối chương trình");

                    b.ToTable("Curriculum Distribution", (string)null);
                });

            modelBuilder.Entity("Project_MLD.Models.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<byte[]>("Content")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("content");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<int>("Pl4Id")
                        .HasColumnType("int")
                        .HasColumnName("pl4_id");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("Pl4Id");

                    b.ToTable("Document", (string)null);
                });

            modelBuilder.Entity("Project_MLD.Models.FormCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK_Hình thức thi");

                    b.ToTable("Form Category", (string)null);
                });

            modelBuilder.Entity("Project_MLD.Models.Grade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<int?>("TotalStudent")
                        .HasColumnType("int")
                        .HasColumnName("total_student");

                    b.Property<int?>("TotalStudentSelectedTopics")
                        .HasColumnType("int")
                        .HasColumnName("total_student_selected_topics");

                    b.HasKey("Id")
                        .HasName("PK_Khối Lớp");

                    b.ToTable("Grade", (string)null);
                });

            modelBuilder.Entity("Project_MLD.Models.LevelOfTrainning", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("LevelOfTrainning", (string)null);
                });

            modelBuilder.Entity("Project_MLD.Models.LoginAttempt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("account_name");

                    b.Property<DateOnly?>("CreatedDate")
                        .HasColumnType("date")
                        .HasColumnName("created_date");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("password");

                    b.Property<bool?>("Success")
                        .HasColumnType("bit")
                        .HasColumnName("success");

                    b.HasKey("Id");

                    b.ToTable("Login Attempt", (string)null);
                });

            modelBuilder.Entity("Project_MLD.Models.PeriodicAssessment", b =>
                {
                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("description");

                    b.Property<int?>("FormCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("form_category_id");

                    b.Property<int?>("document1Id")
                        .HasColumnType("int")
                        .HasColumnName("document1_id");

                    b.Property<int?>("TestingCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("testing_category_id");

                    b.Property<int?>("Time")
                        .HasColumnType("int")
                        .HasColumnName("time");

                    b.HasIndex("FormCategoryId");

                    b.HasIndex("document1Id");

                    b.HasIndex("TestingCategoryId");

                    b.ToTable("Periodic Assessment", (string)null);
                });

            modelBuilder.Entity("Project_MLD.Models.Document1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ApproveBy")
                        .HasColumnType("int")
                        .HasColumnName("approve_by");

                    b.Property<int?>("GradeId")
                        .HasColumnType("int")
                        .HasColumnName("grade_id");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Note")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("note");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int")
                        .HasColumnName("subject_id");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK_Kế Hoạch Dạy Học");

                    b.HasIndex("GradeId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("UserId");

                    b.ToTable("Phu Luc 1", (string)null);
                });

            modelBuilder.Entity("Project_MLD.Models.Docuemnt2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK_Kế hoạch Tổ chức Hoạt Động Giáo Dục");

                    b.HasIndex("UserId");

                    b.ToTable("Phu luc 2", (string)null);
                });

            modelBuilder.Entity("Project_MLD.Models.Docuemnt2Grade", b =>
                {
                    b.Property<string>("CollaborateWith")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("collaborate_with");

                    b.Property<string>("Condition")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("condition");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("description");

                    b.Property<int?>("GradeId")
                        .HasColumnType("int")
                        .HasColumnName("grade_id");

                    b.Property<string>("HostBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("host_by");

                    b.Property<int?>("Pl2Id")
                        .HasColumnType("int")
                        .HasColumnName("pl2_id");

                    b.Property<string>("Place")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("place");

                    b.Property<int?>("Slot")
                        .HasColumnType("int")
                        .HasColumnName("slot");

                    b.Property<DateOnly?>("Time")
                        .HasColumnType("date")
                        .HasColumnName("time");

                    b.Property<string>("TitleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("title_name");

                    b.HasIndex("GradeId");

                    b.HasIndex("Pl2Id");

                    b.ToTable("Docuemnt2_Grade", (string)null);
                });

            modelBuilder.Entity("Project_MLD.Models.PhuLuc3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("document1Id")
                        .HasColumnType("int")
                        .HasColumnName("document1_id");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK_Kế hoạch giáo dục của GV");

                    b.HasIndex("document1Id");

                    b.HasIndex("UserId");

                    b.ToTable("Phu Luc 3", (string)null);
                });

            modelBuilder.Entity("Project_MLD.Models.PhuLuc4", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<int?>("TeachingPlannerId")
                        .HasColumnType("int")
                        .HasColumnName("teaching_planner_id");

                    b.HasKey("Id");

                    b.HasIndex("TeachingPlannerId");

                    b.ToTable("Phu Luc 4", (string)null);
                });

            modelBuilder.Entity("Project_MLD.Models.PhuLuc5", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("EvaluateBy")
                        .HasColumnType("int")
                        .HasColumnName("evaluate_by");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<int>("Pl4Id")
                        .HasColumnType("int")
                        .HasColumnName("pl4_id");

                    b.HasKey("Id");

                    b.HasIndex("EvaluateBy");

                    b.HasIndex("Pl4Id");

                    b.ToTable("Phu Luc 5", (string)null);
                });

            modelBuilder.Entity("Project_MLD.Models.document1CurriculumDistribution", b =>
                {
                    b.Property<int>("CurruculumId")
                        .HasColumnType("int")
                        .HasColumnName("curruculum_id");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("description");

                    b.Property<int>("document1Id")
                        .HasColumnType("int")
                        .HasColumnName("document1_id");

                    b.Property<int>("Slot")
                        .HasColumnType("int")
                        .HasColumnName("slot");

                    b.HasIndex("CurruculumId");

                    b.HasIndex("document1Id");

                    b.ToTable("document1_CurriculumDistribution", (string)null);
                });

            modelBuilder.Entity("Project_MLD.Models.document1SelectedTopic", b =>
                {
                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("description");

                    b.Property<int?>("document1Id")
                        .HasColumnType("int")
                        .HasColumnName("document1_id");

                    b.Property<int?>("SelectedTopicsId")
                        .HasColumnType("int")
                        .HasColumnName("selected_topics_id");

                    b.Property<int?>("Slot")
                        .HasColumnType("int")
                        .HasColumnName("slot");

                    b.HasIndex("document1Id");

                    b.HasIndex("SelectedTopicsId");

                    b.ToTable("document1_SelectedTopics", (string)null);
                });

            modelBuilder.Entity("Project_MLD.Models.document1SubjectRoom", b =>
                {
                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("description");

                    b.Property<string>("Note")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("note");

                    b.Property<int?>("document1Id")
                        .HasColumnType("int")
                        .HasColumnName("document1_id");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<int?>("SubjectRoomId")
                        .HasColumnType("int")
                        .HasColumnName("subject_room_id");

                    b.HasIndex("document1Id");

                    b.HasIndex("SubjectRoomId");

                    b.ToTable("document1_Subject Room", (string)null);
                });

            modelBuilder.Entity("Project_MLD.Models.document1TeachingEquipment", b =>
                {
                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("description");

                    b.Property<string>("Note")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("note");

                    b.Property<int?>("document1Id")
                        .HasColumnType("int")
                        .HasColumnName("document1_id");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<int?>("TeachingEquipmentId")
                        .HasColumnType("int")
                        .HasColumnName("teaching_equipment_id");

                    b.HasIndex("document1Id");

                    b.HasIndex("TeachingEquipmentId");

                    b.ToTable("document1_TeachingEquipment", (string)null);
                });

            modelBuilder.Entity("Project_MLD.Models.Pl3CurriculumDistribution", b =>
                {
                    b.Property<int?>("CurriculumId")
                        .HasColumnType("int")
                        .HasColumnName("curriculum_id");

                    b.Property<int?>("Pl3Id")
                        .HasColumnType("int")
                        .HasColumnName("pl3_id");

                    b.Property<string>("Place")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("place");

                    b.Property<int?>("Slot")
                        .HasColumnType("int")
                        .HasColumnName("slot");

                    b.Property<int>("TeachingEquipmentId")
                        .HasColumnType("int")
                        .HasColumnName("teaching_equipment_ID");

                    b.Property<DateOnly?>("Time")
                        .HasColumnType("date")
                        .HasColumnName("time");

                    b.HasIndex("CurriculumId");

                    b.HasIndex("Pl3Id");

                    b.HasIndex("TeachingEquipmentId");

                    b.ToTable("PL3_CurriculumDistribution", (string)null);
                });

            modelBuilder.Entity("Project_MLD.Models.ProfessionalStandard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("Professional Standards", (string)null);
                });

            modelBuilder.Entity("Project_MLD.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<bool?>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("active");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateOnly?>("CreatedDate")
                        .HasColumnType("date")
                        .HasColumnName("created_date");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<DateOnly?>("ModifiedDate")
                        .HasColumnType("date")
                        .HasColumnName("modified_date");

                    b.Property<string>("RoleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("role_name");

                    b.Property<string>("RoleNote")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("role_note");

                    b.HasKey("RoleId");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("Project_MLD.Models.Scorm", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("id")
                        .IsFixedLength();

                    b.Property<byte[]>("Content")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("content");

                    b.HasKey("Id");

                    b.ToTable("Scorm", (string)null);
                });

            modelBuilder.Entity("Project_MLD.Models.SelectedTopic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK_Chuyên đề / Bài Học");

                    b.ToTable("Selected Topics", (string)null);
                });

            modelBuilder.Entity("Project_MLD.Models.SpecializedTeam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK_Tổ chuyên Môn");

                    b.ToTable("Specialized Team", (string)null);
                });

            modelBuilder.Entity("Project_MLD.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK_Môn học");

                    b.ToTable("Subject", (string)null);
                });

            modelBuilder.Entity("Project_MLD.Models.SubjectRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK_Phòng Bộ Môn");

                    b.ToTable("Subject Room", (string)null);
                });

            modelBuilder.Entity("Project_MLD.Models.TeachingEquipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK_Thiết bị dậy học");

                    b.ToTable("Teaching Equipment", (string)null);
                });

            modelBuilder.Entity("Project_MLD.Models.TeachingPlanner", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("ClassId")
                        .HasColumnType("int")
                        .HasColumnName("class_id");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int")
                        .HasColumnName("subject_id");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK_User - Lớp - Mon");

                    b.HasIndex("ClassId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("UserId");

                    b.ToTable("Teaching Planner", (string)null);
                });

            modelBuilder.Entity("Project_MLD.Models.TestingCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK_Loại Bài kiểm tra");

                    b.ToTable("Testing Category", (string)null);
                });

            modelBuilder.Entity("Project_MLD.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("account_id");

                    b.Property<bool?>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("active");

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<int?>("Age")
                        .HasColumnType("int")
                        .HasColumnName("age");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateOnly?>("CreatedDate")
                        .HasColumnType("date")
                        .HasColumnName("created_date");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("first_name");

                    b.Property<string>("FullName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("full_name");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit")
                        .HasColumnName("gender");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("last_name");

                    b.Property<int?>("LevelOfTrainningId")
                        .HasColumnType("int")
                        .HasColumnName("level_of_trainning_id");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<DateOnly?>("ModifiedDate")
                        .HasColumnType("date")
                        .HasColumnName("modified_date");

                    b.Property<byte[]>("Photo")
                        .HasMaxLength(50)
                        .HasColumnType("varbinary(50)")
                        .HasColumnName("photo");

                    b.Property<string>("PlaceOfBirth")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("place_of_birth");

                    b.Property<int?>("ProfessionalStandardsId")
                        .HasColumnType("int")
                        .HasColumnName("professional_standards_id");

                    b.Property<int?>("SpecializedTeamId")
                        .HasColumnType("int")
                        .HasColumnName("specialized_team_id");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("LevelOfTrainningId");

                    b.HasIndex("ProfessionalStandardsId");

                    b.HasIndex("SpecializedTeamId");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("Project_MLD.Models.AccountRole", b =>
                {
                    b.HasOne("Project_MLD.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_Account Role_Account");

                    b.HasOne("Project_MLD.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_Account Role_Role");

                    b.Navigation("Account");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Project_MLD.Models.Class", b =>
                {
                    b.HasOne("Project_MLD.Models.Grade", "Grade")
                        .WithMany("Classes")
                        .HasForeignKey("GradeId")
                        .HasConstraintName("FK_Lớp_Khối Lớp");

                    b.Navigation("Grade");
                });

            modelBuilder.Entity("Project_MLD.Models.Document", b =>
                {
                    b.HasOne("Project_MLD.Models.Category", "Category")
                        .WithMany("Documents")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK_Document_Category");

                    b.HasOne("Project_MLD.Models.PhuLuc4", "Pl4")
                        .WithMany("Documents")
                        .HasForeignKey("Pl4Id")
                        .IsRequired()
                        .HasConstraintName("FK_Document_Phu Luc 4");

                    b.Navigation("Category");

                    b.Navigation("Pl4");
                });

            modelBuilder.Entity("Project_MLD.Models.PeriodicAssessment", b =>
                {
                    b.HasOne("Project_MLD.Models.TestingCategory", "FormCategory")
                        .WithMany()
                        .HasForeignKey("FormCategoryId")
                        .HasConstraintName("FK_Kiểm tra, đánh giá định kỳ_Loại Bài kiểm tra");

                    b.HasOne("Project_MLD.Models.Document1", "document1")
                        .WithMany()
                        .HasForeignKey("document1Id")
                        .HasConstraintName("FK_Kiểm tra, đánh giá định kỳ_Kế Hoạch Dạy Học");

                    b.HasOne("Project_MLD.Models.FormCategory", "TestingCategory")
                        .WithMany()
                        .HasForeignKey("TestingCategoryId")
                        .HasConstraintName("FK_Kiểm tra, đánh giá định kỳ_Hình thức thi");

                    b.Navigation("FormCategory");

                    b.Navigation("document1");

                    b.Navigation("TestingCategory");
                });

            modelBuilder.Entity("Project_MLD.Models.Document1", b =>
                {
                    b.HasOne("Project_MLD.Models.Grade", "Grade")
                        .WithMany("Document1s")
                        .HasForeignKey("GradeId")
                        .HasConstraintName("FK_Kế Hoạch Dạy Học_Khối Lớp");

                    b.HasOne("Project_MLD.Models.Subject", "Subject")
                        .WithMany("Document1s")
                        .HasForeignKey("SubjectId")
                        .HasConstraintName("FK_Kế Hoạch Dạy Học_Môn học");

                    b.HasOne("Project_MLD.Models.User", "User")
                        .WithMany("Document1s")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Phu Luc 1_User");

                    b.Navigation("Grade");

                    b.Navigation("Subject");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Project_MLD.Models.Docuemnt2", b =>
                {
                    b.HasOne("Project_MLD.Models.User", "User")
                        .WithMany("Docuemnt2s")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Kế hoạch Tổ chức Hoạt Động Giáo Dục_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Project_MLD.Models.Docuemnt2Grade", b =>
                {
                    b.HasOne("Project_MLD.Models.Grade", "Grade")
                        .WithMany()
                        .HasForeignKey("GradeId")
                        .HasConstraintName("FK_KHTCHDGD - KHỐI LỚP_Khối Lớp");

                    b.HasOne("Project_MLD.Models.Docuemnt2", "Pl2")
                        .WithMany()
                        .HasForeignKey("Pl2Id")
                        .HasConstraintName("FK_KHTCHDGD - KHỐI LỚP_Kế hoạch Tổ chức Hoạt Động Giáo Dục");

                    b.Navigation("Grade");

                    b.Navigation("Pl2");
                });

            modelBuilder.Entity("Project_MLD.Models.PhuLuc3", b =>
                {
                    b.HasOne("Project_MLD.Models.Document1", "document1")
                        .WithMany("PhuLuc3s")
                        .HasForeignKey("document1Id")
                        .HasConstraintName("FK_Kế hoạch giáo dục của GV_Kế Hoạch Dạy Học");

                    b.HasOne("Project_MLD.Models.User", "User")
                        .WithMany("PhuLuc3s")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Kế hoạch giáo dục của GV_User");

                    b.Navigation("document1");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Project_MLD.Models.PhuLuc4", b =>
                {
                    b.HasOne("Project_MLD.Models.TeachingPlanner", "TeachingPlanner")
                        .WithMany("PhuLuc4s")
                        .HasForeignKey("TeachingPlannerId")
                        .HasConstraintName("FK_Phu Luc 4_User - Lớp - Mon");

                    b.Navigation("TeachingPlanner");
                });

            modelBuilder.Entity("Project_MLD.Models.PhuLuc5", b =>
                {
                    b.HasOne("Project_MLD.Models.User", "EvaluateByNavigation")
                        .WithMany("PhuLuc5s")
                        .HasForeignKey("EvaluateBy")
                        .HasConstraintName("FK_Phu Luc 5_User");

                    b.HasOne("Project_MLD.Models.PhuLuc4", "Pl4")
                        .WithMany("PhuLuc5s")
                        .HasForeignKey("Pl4Id")
                        .IsRequired()
                        .HasConstraintName("FK_Phu Luc 5_Phu Luc 4");

                    b.Navigation("EvaluateByNavigation");

                    b.Navigation("Pl4");
                });

            modelBuilder.Entity("Project_MLD.Models.document1CurriculumDistribution", b =>
                {
                    b.HasOne("Project_MLD.Models.CurriculumDistribution", "Curruculum")
                        .WithMany()
                        .HasForeignKey("CurruculumId")
                        .IsRequired()
                        .HasConstraintName("FK_khdh-pptc_Phân phối chương trình");

                    b.HasOne("Project_MLD.Models.Document1", "document1")
                        .WithMany()
                        .HasForeignKey("document1Id")
                        .IsRequired()
                        .HasConstraintName("FK_khdh-pptc_Kế Hoạch Dạy Học");

                    b.Navigation("Curruculum");

                    b.Navigation("document1");
                });

            modelBuilder.Entity("Project_MLD.Models.document1SelectedTopic", b =>
                {
                    b.HasOne("Project_MLD.Models.Document1", "document1")
                        .WithMany()
                        .HasForeignKey("document1Id")
                        .HasConstraintName("FK_khdh _ CD / BH_Kế Hoạch Dạy Học");

                    b.HasOne("Project_MLD.Models.SelectedTopic", "SelectedTopics")
                        .WithMany()
                        .HasForeignKey("SelectedTopicsId")
                        .HasConstraintName("FK_khdh _ CD / BH_Chuyên đề / Bài Học");

                    b.Navigation("document1");

                    b.Navigation("SelectedTopics");
                });

            modelBuilder.Entity("Project_MLD.Models.document1SubjectRoom", b =>
                {
                    b.HasOne("Project_MLD.Models.Document1", "document1")
                        .WithMany()
                        .HasForeignKey("document1Id")
                        .HasConstraintName("FK_khdh - Phòng bộ môn_Kế Hoạch Dạy Học");

                    b.HasOne("Project_MLD.Models.SubjectRoom", "SubjectRoom")
                        .WithMany()
                        .HasForeignKey("SubjectRoomId")
                        .HasConstraintName("FK_khdh - Phòng bộ môn_Phòng Bộ Môn");

                    b.Navigation("document1");

                    b.Navigation("SubjectRoom");
                });

            modelBuilder.Entity("Project_MLD.Models.document1TeachingEquipment", b =>
                {
                    b.HasOne("Project_MLD.Models.Document1", "document1")
                        .WithMany()
                        .HasForeignKey("document1Id")
                        .HasConstraintName("FK_KHDH_TBDH_Kế Hoạch Dạy Học");

                    b.HasOne("Project_MLD.Models.TeachingEquipment", "TeachingEquipment")
                        .WithMany()
                        .HasForeignKey("TeachingEquipmentId")
                        .HasConstraintName("FK_KHDH_TBDH_Thiết bị dậy học");

                    b.Navigation("document1");

                    b.Navigation("TeachingEquipment");
                });

            modelBuilder.Entity("Project_MLD.Models.Pl3CurriculumDistribution", b =>
                {
                    b.HasOne("Project_MLD.Models.CurriculumDistribution", "Curriculum")
                        .WithMany()
                        .HasForeignKey("CurriculumId")
                        .HasConstraintName("FK_khgdGV - ppct_Phân phối chương trình");

                    b.HasOne("Project_MLD.Models.PhuLuc3", "Pl3")
                        .WithMany()
                        .HasForeignKey("Pl3Id")
                        .HasConstraintName("FK_khgdGV - ppct_Kế hoạch giáo dục của GV");

                    b.HasOne("Project_MLD.Models.TeachingEquipment", "TeachingEquipment")
                        .WithMany()
                        .HasForeignKey("TeachingEquipmentId")
                        .IsRequired()
                        .HasConstraintName("FK_khgdGV - ppct_Thiết bị dậy học");

                    b.Navigation("Curriculum");

                    b.Navigation("Pl3");

                    b.Navigation("TeachingEquipment");
                });

            modelBuilder.Entity("Project_MLD.Models.TeachingPlanner", b =>
                {
                    b.HasOne("Project_MLD.Models.Class", "Class")
                        .WithMany("TeachingPlanners")
                        .HasForeignKey("ClassId")
                        .HasConstraintName("FK_GV - Lớp_Lớp");

                    b.HasOne("Project_MLD.Models.Subject", "Subject")
                        .WithMany("TeachingPlanners")
                        .HasForeignKey("SubjectId")
                        .HasConstraintName("FK_User - Lớp - Mon_Môn học1");

                    b.HasOne("Project_MLD.Models.User", "User")
                        .WithMany("TeachingPlanners")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_GV - Lớp_User");

                    b.Navigation("Class");

                    b.Navigation("Subject");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Project_MLD.Models.User", b =>
                {
                    b.HasOne("Project_MLD.Models.Account", "Account")
                        .WithMany("Users")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_User_Account1");

                    b.HasOne("Project_MLD.Models.LevelOfTrainning", "LevelOfTrainning")
                        .WithMany("Users")
                        .HasForeignKey("LevelOfTrainningId")
                        .HasConstraintName("FK_User_LevelOfTrainning");

                    b.HasOne("Project_MLD.Models.ProfessionalStandard", "ProfessionalStandards")
                        .WithMany("Users")
                        .HasForeignKey("ProfessionalStandardsId")
                        .HasConstraintName("FK_User_Professional Standards");

                    b.HasOne("Project_MLD.Models.SpecializedTeam", "SpecializedTeam")
                        .WithMany("Users")
                        .HasForeignKey("SpecializedTeamId")
                        .HasConstraintName("FK_User_Tổ chuyên Môn");

                    b.Navigation("Account");

                    b.Navigation("LevelOfTrainning");

                    b.Navigation("ProfessionalStandards");

                    b.Navigation("SpecializedTeam");
                });

            modelBuilder.Entity("Project_MLD.Models.Account", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Project_MLD.Models.Category", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("Project_MLD.Models.Class", b =>
                {
                    b.Navigation("TeachingPlanners");
                });

            modelBuilder.Entity("Project_MLD.Models.Grade", b =>
                {
                    b.Navigation("Classes");

                    b.Navigation("Document1s");
                });

            modelBuilder.Entity("Project_MLD.Models.LevelOfTrainning", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Project_MLD.Models.Document1", b =>
                {
                    b.Navigation("PhuLuc3s");
                });

            modelBuilder.Entity("Project_MLD.Models.PhuLuc4", b =>
                {
                    b.Navigation("Documents");

                    b.Navigation("PhuLuc5s");
                });

            modelBuilder.Entity("Project_MLD.Models.ProfessionalStandard", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Project_MLD.Models.SpecializedTeam", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Project_MLD.Models.Subject", b =>
                {
                    b.Navigation("Document1s");

                    b.Navigation("TeachingPlanners");
                });

            modelBuilder.Entity("Project_MLD.Models.TeachingPlanner", b =>
                {
                    b.Navigation("PhuLuc4s");
                });

            modelBuilder.Entity("Project_MLD.Models.User", b =>
                {
                    b.Navigation("Document1s");

                    b.Navigation("Docuemnt2s");

                    b.Navigation("PhuLuc3s");

                    b.Navigation("PhuLuc5s");

                    b.Navigation("TeachingPlanners");
                });
#pragma warning restore 612, 618
        }
    }
}
